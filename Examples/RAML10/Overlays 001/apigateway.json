{
    "uses": [
        {
            "usage": "Data types and annotation types for AWS API Gateway",
            "types": {
                "amazon-apigateway-method": {
                    "displayName": "amazon-apigateway-method",
                    "example": "POST",
                    "repeat": "false",
                    "required": "true",
                    "enum": [
                        "GET",
                        "PATCH",
                        "PUT",
                        "POST",
                        "DELETE"
                    ]
                },
                "amazon-apigateway-status": {
                    "displayName": "amazon-apigateway-status",
                    "repeat": "false",
                    "required": "true",
                    "pattern": "^[12345]\\d\\d$"
                },
                "amazon-apigateway-templates": {
                    "displayName": "amazon-apigateway-templates",
                    "repeat": "false",
                    "required": "true",
                    "properties": {
                        "[\\w+/\\w+]": {
                            "displayName": "[\\w+/\\w+]",
                            "repeat": "false",
                            "required": "true"
                        }
                    }
                },
                "amazon-apigateway-auth-type": {
                    "displayName": "amazon-apigateway-auth-type",
                    "repeat": "false",
                    "required": "true",
                    "enum": [
                        "aws_iam"
                    ]
                },
                "amazon-apigateway-integration-lambda": {
                    "displayName": "amazon-apigateway-integration-lambda",
                    "repeat": "false",
                    "required": "true",
                    "properties": {
                        "type": {
                            "displayName": "type",
                            "repeat": "false",
                            "required": "true",
                            "enum": [
                                "lambda"
                            ]
                        }
                    }
                },
                "amazon-apigateway-integration-HTTP": {
                    "displayName": "amazon-apigateway-integration-HTTP",
                    "repeat": "false",
                    "required": "true",
                    "properties": {
                        "type": {
                            "displayName": "type",
                            "repeat": "false",
                            "required": "true",
                            "enum": [
                                "HTTP"
                            ]
                        }
                    }
                },
                "amazon-apigateway-integration-mock": {
                    "displayName": "amazon-apigateway-integration-mock",
                    "repeat": "false",
                    "required": "true",
                    "properties": {
                        "type": {
                            "displayName": "type",
                            "repeat": "false",
                            "required": "true",
                            "enum": [
                                "mock"
                            ]
                        }
                    }
                },
                "amazon-apigateway-integration-aws": {
                    "displayName": "amazon-apigateway-integration-aws",
                    "example": {
                        "type": "aws",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:ACCOUNT_ID:function:myFunction/invocations",
                        "httpMethod": "POST",
                        "credentials": "arn:aws:iam::ACCOUNT_ID:role/lambda_exec_role",
                        "requestTemplates": {
                            "application/json": "json request template 2",
                            "application/xml": "xml request template 2"
                        },
                        "requestParameters": {
                            "integration.request.path.integrationPathParam": "method.request.querystring.latitude",
                            "integration.request.querystring.integrationQueryParam": "method.request.querystring.longitude"
                        },
                        "cacheNamespace": "cache namespace",
                        "cacheKeyParameters": [],
                        "responses": {
                            "2\\d{2}": {
                                "statusCode": "200",
                                "responseParameters": {
                                    "method.response.header.test-method-response-header": "integration.response.header.integrationResponseHeaderParam1"
                                },
                                "responseTemplates": {
                                    "application/json": "json 200 response template",
                                    "application/xml": "xml 200 response template"
                                }
                            },
                            "default": {
                                "statusCode": "400",
                                "responseParameters": {
                                    "method.response.header.test-method-response-header": "'static value'"
                                },
                                "responseTemplates": {
                                    "application/json": "json 400 response template",
                                    "application/xml": "xml 400 response template"
                                }
                            }
                        }
                    },
                    "repeat": "false",
                    "required": "true",
                    "properties": {
                        "type": {
                            "displayName": "type",
                            "repeat": "false",
                            "required": "true",
                            "enum": [
                                "aws"
                            ]
                        },
                        "uri": {
                            "displayName": "uri",
                            "repeat": "false",
                            "required": "true"
                        },
                        "httpMethod": {
                            "displayName": "httpMethod",
                            "type": "amazon-apigateway-method",
                            "repeat": "false",
                            "required": "true"
                        },
                        "credentials": {
                            "displayName": "credentials",
                            "repeat": "false",
                            "required": "true"
                        },
                        "requestTemplates": {
                            "displayName": "requestTemplates",
                            "type": "amazon-apigateway-templates",
                            "repeat": "false",
                            "required": "true"
                        },
                        "requestParameters": {
                            "displayName": "requestParameters",
                            "type": "object",
                            "repeat": "false",
                            "required": "true"
                        },
                        "cacheNamespace": {
                            "displayName": "cacheNamespace",
                            "repeat": "false",
                            "required": "true"
                        },
                        "cacheKeyParameters": {
                            "displayName": "cacheKeyParameters",
                            "type": "string[]",
                            "repeat": "false",
                            "required": "true"
                        },
                        "responses": {
                            "displayName": "responses",
                            "repeat": "false",
                            "required": "true",
                            "properties": {
                                "[]": {
                                    "displayName": "[]",
                                    "repeat": "false",
                                    "required": "true",
                                    "properties": {
                                        "statusCode": {
                                            "displayName": "statusCode",
                                            "type": "amazon-apigateway-status",
                                            "repeat": "false",
                                            "required": "true"
                                        },
                                        "responseParameters": {
                                            "displayName": "responseParameters",
                                            "type": "object",
                                            "repeat": "false",
                                            "required": "true"
                                        },
                                        "responseTemplates": {
                                            "displayName": "responseTemplates",
                                            "type": "amazon-apigateway-templates",
                                            "repeat": "false",
                                            "required": "true"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "amazon-apigateway-integration": {
                    "displayName": "amazon-apigateway-integration",
                    "type": "amazon-apigateway-integration-lambda | amazon-apigateway-integration-HTTP | amazon-apigateway-integration-mock | amazon-apigateway-integration-aws",
                    "repeat": "false",
                    "required": "true"
                }
            },
            "annotationTypes": {
                "amazon-apigateway-auth": {
                    "displayName": "amazon-apigateway-auth",
                    "type": "amazon-apigateway-auth-type",
                    "repeat": "false",
                    "required": "true"
                },
                "amazon-apigateway-integration": {}
            },
            "name": "AWS"
        }
    ],
    "securitySchemes": [
        {
            "key": {
                "type": "Pass Through",
                "describedBy": {
                    "headers": {
                        "x-api-key": {}
                    }
                }
            }
        }
    ],
    "title": "API Gateway Test API",
    "version": "1.0.0",
    "baseUri": "https://api.uber.com",
    "mediaType": "application/json",
    "protocols": [
        "HTTPS"
    ],
    "resources": [
        {
            "description": "The Products endpoint returns information about the *Uber* products\noffered at a given location. The response includes the display name\nand other details about each product, and lists the products in the\nproper display order.\n",
            "relativeUri": "/products",
            "relativeUriPathSegments": [
                "products"
            ],
            "displayName": "Product Types",
            "methods": [
                {
                    "annotations": {
                        "AWS.amazon-apigateway-auth": "aws_iam",
                        "AWS.amazon-apigateway-integration": {
                            "type": "aws",
                            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:ACCOUNT_ID:function:myFunction/invocations",
                            "httpMethod": "POST",
                            "credentials": "arn:aws:iam::ACCOUNT_ID:role/lambda_exec_role",
                            "requestTemplates": {
                                "application/json": "json request template 2",
                                "application/xml": "xml request template 2"
                            },
                            "requestParameters": {
                                "integration.request.path.integrationPathParam": "method.request.querystring.latitude",
                                "integration.request.querystring.integrationQueryParam": "method.request.querystring.longitude"
                            },
                            "cacheNamespace": "cache namespace",
                            "cacheKeyParameters": [],
                            "responses": {
                                "2\\d{2}": {
                                    "statusCode": "200",
                                    "responseParameters": {
                                        "method.response.header.test-method-response-header": "integration.response.header.integrationResponseHeaderParam1"
                                    },
                                    "responseTemplates": {
                                        "application/json": "json 200 response template",
                                        "application/xml": "xml 200 response template"
                                    }
                                },
                                "default": {
                                    "statusCode": "400",
                                    "responseParameters": {
                                        "method.response.header.test-method-response-header": "'static value'"
                                    },
                                    "responseTemplates": {
                                        "application/json": "json 400 response template",
                                        "application/xml": "xml 400 response template"
                                    }
                                }
                            }
                        }
                    },
                    "displayName": "get",
                    "queryParameters": {
                        "latitude": {
                            "description": "Latitude component of location",
                            "type": "number",
                            "required": "true"
                        },
                        "longitude": {
                            "description": "Longitude component of location",
                            "type": "number",
                            "required": "true"
                        }
                    },
                    "method": "get"
                }
            ]
        }
    ]
}