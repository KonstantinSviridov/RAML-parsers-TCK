{
    "title": "Instagram",
    "version": "v1",
    "baseUri": "https://api.instagram.com/{version}/",
    "mediaType": "application/json",
    "resourceTypes": [
        {
            "usersListing": {
                "get": {
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "object",
                                    "example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_66_75sq.jpg\",\n        \"id\": \"66\",\n        \"last_name\": \"Dorsey\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_29648_75sq_1294520029.jpg\",\n        \"id\": \"29648\",\n        \"last_name\": \"Jack\"\n    },\n    {\n        \"username\": \"jacktiddy\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_13096_75sq_1286441317.jpg\",\n        \"id\": \"13096\",\n        \"last_name\": \"Tiddy\"\n    }]\n}",
                                    "schema": "undefined"
                                }
                            }
                        }
                    }
                },
                "type": "base"
            }
        },
        {
            "mediaSearch": {
                "get": {
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "object",
                                    "example": "{\n    \"data\": {\n        \"type\": \"image\",\n        \"users_in_photo\": [{\n            \"user\": {\n                \"username\": \"kevin\",\n                \"full_name\": \"Kevin S\",\n                \"id\": \"3\",\n                \"profile_picture\": \"...\"\n            },\n            \"position\": {\n                \"x\": 0.315,\n                \"y\": 0.9111\n            }\n        }],\n        \"filter\": \"Walden\",\n        \"tags\": [],\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"...\",\n            \"bio\": \"...\",\n            \"website\": \"...\",\n            \"id\": \"3\"\n        },\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"id\": \"3\",\n        \"location\": null\n    }\n}",
                                    "schema": "undefined"
                                }
                            }
                        }
                    }
                },
                "type": "base"
            }
        },
        {
            "secured": {
                "delete?": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "object",
                                    "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                    "schema": "undefined"
                                }
                            }
                        }
                    }
                },
                "post?": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "object",
                                    "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                    "schema": "undefined"
                                }
                            }
                        }
                    }
                },
                "type": "base"
            }
        },
        {
            "base": {
                "delete?": {
                    "responses": {
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                },
                "post?": {
                    "responses": {
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                },
                "get?": {
                    "is": [
                        "limitable",
                        "acceptCallback"
                    ],
                    "responses": {
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                }
            }
        },
        {
            "feedsListing": {
                "get": {
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "object",
                                    "example": "{\n    \"data\": [{\n        \"location\": {\n            \"id\": \"833\",\n            \"latitude\": 37.77956816727314,\n            \"longitude\": -122.41387367248539,\n            \"name\": \"Civic Center BART\"\n        },\n        \"comments\": {\n            \"count\": 16,\n            \"data\": [  ]\n        },\n        \"caption\": null,\n        \"link\": \"http://instagr.am/p/BXsFz/\",\n        \"likes\": {\n            \"count\": 190,\n            \"data\": [{\n                \"username\": \"shayne\",\n                \"full_name\": \"Shayne Sweeney\",\n                \"id\": \"20\",\n                \"profile_picture\": \"...\"\n            }, {}]\n        },\n        \"created_time\": \"1296748524\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"id\": \"22987123\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        }\n    },\n    {\n        \"videos\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_102.mp4\",\n                \"width\": 480,\n                \"height\": 480\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_101.mp4\",\n                \"width\": 640,\n                \"height\": 640\n            },\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            },\n            {\n                \"created_time\": \"1279341004\",\n                \"text\": \"Chilako taco\",\n                \"from\": {\n                    \"username\": \"kevin\",\n                    \"full_name\": \"Kevin S\",\n                    \"id\": \"3\",\n                    \"profile_picture\": \"...\"\n                },\n                \"id\": \"3\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"video\",\n        \"users_in_photo\": null,\n        \"filter\": \"Vesper\",\n        \"tags\": [],\n        \"id\": \"363839373298\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        },\n        \"location\": null\n    }}]\n}",
                                    "schema": "undefined"
                                }
                            }
                        }
                    }
                },
                "type": "base"
            }
        }
    ],
    "securedBy": [
        "oauth_2_0",
        "clientId"
    ],
    "documentation": [
        {
            "title": "Authentication",
            "content": "Instagram’s API uses the [OAuth 2.0 protocol](http://tools.ietf.org/html/draft-ietf-oauth-v2-12) for simple, but effective authentication and authorization. OAuth 2.0 is much easier to use than previous schemes; developers can start using the Instagram API almost immediately. The one thing to keep in mind is that all requests to the API must be made over SSL (https:// not http://)\n\n## Do you need to authenticate?\n\nFor the most part, Instagram’s API only requires the use of a _client_id). A client_id simply associates your server, script, or program with a specific application. However, some requests require authentication - specifically requests made on behalf of a user. Authenticated requests require an _access_token_. These tokens are unique to a user and should be stored securely. Access tokens may expire at any time in the future.\n\nNote that in many situations, you may not need to authenticate users at all. For instance, you may request popular photos without authenticating (i.e. you do not need to provide an access_token; just use your client ID with your request). We only require authentication in cases where your application is making requests on behalf of a user (commenting, liking, browsing a user’s feed, etc.).\n\n## Receiving an access_token\n\nIn order to receive an access_token, you must do the following:\n\n- Direct the user to our authorization url.\n  * If the user is not logged in, they will be asked to log in.\n  * The user will be asked if they’d like to give your application access to his/her Instagram data.\n- The server will redirect the user in one of two ways that you choose:\n  * *Server-side* flow (reccommended):Redirect the user to a URI of your choice. Take the provided \n     code parameter and exchange it for an access_token by POSTing the code to our access_token url.\n  * *Implicit flow*: Instead of handling a code, we include the access_token as a fragment (#) in the URL.          This method allows applications without any server component to receive an access_token with ease.\n\n## Server-side (Explicit) Flow\n\nUsing the server-side flow is quite easy. Simply follow these steps:\n\n### Step One: Direct your user to our authorization URL\n\n```\nhttps://api.instagram.com/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=code\n```\n\n*Note:* You may provide an optional *scope* parameter to request additional permissions outside of the “basic” permissions scope. [Learn more about scope](http://instagram.com/developer/authentication/#scope).\n\n*Note*: You may provide an optional *state* parameter to carry through any server-specific state you need to, for example, protect against CSRF issues.\n\nAt this point, we present the user with a login screen and then a confirmation screen where they approve your app’s access to his/her Instagram data.\n\n### Step Two: Receive the redirect from Instagram\n\nOnce a user successfully authenticates and authorizes your application, we will redirect the user to your redirect_uri with a code parameter that you’ll use in step three.\n\n```\nhttp://your-redirect-uri?code=CODE\n```\n\nNote that your redirect URI's host and path MUST match exactly (including trailing slashes) to your registered redirect_uri. You may also include additional query parameters in the supplied redirect_uri, if you need to vary your behavior dynamically. Examples:\n\n|REGISTERED REDIRECT URI           |REDIRECT URI SENT TO /AUTHORIZE                |VALID?|\n|----------------------------------|-----------------------------------------------|------|\n|http://yourcallback.com/          |http://yourcallback.com/                       |yes   |\n|http://yourcallback.com/          |http://yourcallback.com/?this=that             |yes   |\n|http://yourcallback.com/?this=that|http://yourcallback.com/                       |no    |\n|http://yourcallback.com/?this=that|http://yourcallback.com/?this=that&another=true|yes   |\n|http://yourcallback.com/?this=that|http://yourcallback.com/?another=true&this=that|no    |\n|http://yourcallback.com/callback  |http://yourcallback.com/                       |no    |\n|http://yourcallback.com/callback  |http://yourcallback.com/callback/?type=mobile  |yes   |\n\nIf your request for approval is denied by the user, then we will redirect the user to your *redirect_uri* with the following parameters:\n\n* *error*: access_denied\n\n* *error_reason*: user_denied\n\n* *error_description*: The user denied your request\n\n```\nhttp://your-redirect-uri?error=access_denied&error_reason=user_denied&error_description=The+user+denied+your+request\n```\n\nIt is your responsibility to fail gracefully in this situation and display a corresponding error message to your user.\n\n### Step Three: Request the access_token\n\nIn the previous step, you’ll have received a code which you’ll have to exchange in order to receive an access_token for the user. In order to make this exchange, you simply have to POST this code, along with some app identification parameters to our access_token endpoint. Here are the required parameters:\n\n* *client_id*: your client id\n* *client_secret*: your client secret\n* *grant_type*: authorization_code is currently the only supported value\nredirect_uri: the redirect_uri you used in the authorization request. Note: this has to be the same value as in the authorization request.\n* *code*: the exact code you received during the authorization step.\n\nFor example, you could request an access_token like so:\n\n```\ncurl \\-F 'client_id=CLIENT-ID' \\\n    -F 'client_secret=CLIENT-SECRET' \\\n    -F 'grant_type=authorization_code' \\\n    -F 'redirect_uri=YOUR-REDIRECT-URI' \\\n    -F 'code=CODE' \\https://api.instagram.com/oauth/access_token\n```\n\nIf successful, this call will return a neatly packaged OAuth Token that you can use to make authenticated calls to the API. We also include the user who just authenticated for your convenience:\n\n```json\n{\n    \"access_token\": \"fb2e77d.47a0479900504cb3ab4a1f626d174d2d\",\n    \"user\": {\n        \"id\": \"1574083\",\n        \"username\": \"snoopdogg\",\n        \"full_name\": \"Snoop Dogg\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1574083_75sq_1295469061.jpg\"\n    }\n}\n```\n\nNote that we do not include an expiry time. Our access_tokens have no explicit expiry, though your app should handle the case that either the user revokes access or we expire the token after some period of time. In this case, your response’s meta will contain an “error_type=OAuthAccessTokenError”. In other words: do do not assume your access_token is valid forever.\n\n##Client-Side (Implicit) Authentication\n\nIf you’re building an app that does not have a server component (a purely javascript app, for instance), you’ll notice that it’s impossible to complete step three above to receive your access_token without also having to ship your client secret. You should never ship your client secret onto devices you don’t control. Then how do you get an access_token? Well the smart folks in charge of the OAuth 2.0 spec anticipated this problem and created the Implicit Authentication Flow.\n\n### Step One: Direct your user to our authorization URL\n\n```\nhttps://instagram.com/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=token\n```\n\nAt this point, we present the user with a login screen and then a confirmation screen where they approve your app’s access to their Instagram data. Note that unlike the explicit flow the response type here is “token”.\n\n### Step Two: Receive the access_token via the URL fragment\n\nOnce the user has authenticated and then authorized your application, we’ll redirect them to your redirect_uri with the access_token in the url fragment. It’ll look like so:\n\n```\nhttp://your-redirect-uri#access_token=ACCESS-TOKEN\n```\n\nSimply grab the access_token off the URL fragment and you’re good to go. If the user chooses not to authorize your application, you’ll receive the same error response as in the explicit flow\n\n## Scope (Permissions)\n\nThe OAuth 2.0 spec allows you to specify the scope of the access you’re requesting from the user. Currently, all apps have basic read access by default. If all you want to do is access data then you do not need to specify a scope (the “basic” scope will be granted automatically).\n\nHowever, if you plan on asking for extended access such as liking, commenting, or managing friendships, you’ll have to specify these scopes in your authorization request. Here are the scopes we currently support:\n\n* basic - to read any and all data related to a user (e.g. following/followed-by lists, photos, etc.) (granted by default)\n* comments - to create or delete comments on a user’s behalf\n* relationships - to follow and unfollow users on a user’s behalf\n* likes - to like and unlike items on a user’s behalf\n\nYou should only request the scope you need at the time of authorization. If in the future you require additional scope, you may forward the user to the authorization URL with that additional scope to be granted. If you attempt to perform a request with an access token that isn’t authorized for that scope, you will receive an OAuthPermissionsException error return.\n\nIf you’d like to request multiple scopes at once, simply separate the scopes by a space. In the url, this equates to an escaped space (“+”). So if you’re requesting the likes and comments permission, the parameter will look like this:\n\n```\nscope=likes+comments\n```\n\nNote that an empty scope parameter (scope=) is invalid; you must either omit the scope, or specify a non-empty scope list."
        },
        {
            "title": "Headline",
            "content": "Instagram is a popular image sharing mobile service. The first version of the Instagram API is an exciting step forward towards making it easier for users to have open access to their Instagram data."
        }
    ],
    "protocols": [
        "HTTPS"
    ],
    "traits": [
        {
            "acceptCallback": {
                "queryParameters": {
                    "callback": {
                        "description": "Callback function name. All output will be wrapper under this function name.\n",
                        "type": "string",
                        "example": "callbackFunction",
                        "displayName": "callback"
                    }
                }
            }
        },
        {
            "limitableByGeoPoint": {
                "queryParameters": {
                    "lat": {
                        "description": "Latitude of the center search coordinate. If used, lng is required.",
                        "type": "number",
                        "displayName": "lat"
                    },
                    "lng": {
                        "description": "Longitude of the center search coordinate. If used, lat is required.",
                        "type": "number",
                        "displayName": "lng"
                    },
                    "distance": {
                        "description": "Default is 1000m (distance=1000), max distance is 5000.",
                        "type": "integer",
                        "default": 1000,
                        "displayName": "distance"
                    }
                }
            }
        },
        {
            "limitable": {
                "queryParameters": {
                    "count": {
                        "description": "Number of items you would like to receive.",
                        "type": "integer",
                        "example": "1",
                        "displayName": "count"
                    }
                }
            }
        },
        {
            "limitableByTime": {
                "queryParameters": {
                    "max_timestamp": {
                        "description": "Return media before this UNIX timestamp.",
                        "type": "integer",
                        "displayName": "max_timestamp"
                    },
                    "min_timestamp": {
                        "description": "Return media after this UNIX timestamp.",
                        "type": "integer",
                        "displayName": "min_timestamp"
                    }
                }
            }
        },
        {
            "limitableById": {
                "queryParameters": {
                    "min_id": {
                        "description": "Return media later than this min_id.",
                        "type": "integer",
                        "displayName": "min_id"
                    },
                    "max_id": {
                        "description": "Return media earlier than this max_id.",
                        "type": "integer",
                        "displayName": "max_id"
                    }
                }
            }
        }
    ],
    "securitySchemes": [
        {
            "oauth_2_0": {
                "description": "Instagram's API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
                "type": "OAuth 2.0"
            }
        },
        {
            "clientId": {
                "description": "in many situations, you may not need to authenticate users at all.\nFor instance, you may request popular photos without authenticating\n(i.e. you do not need to provide an access_token; just use your client ID with your request).\nWe only require authentication in cases where your application is making requests on behalf of a user\n(commenting, liking, browsing a user's feed, etc.).\n",
                "type": "x-customHeader"
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/media",
            "relativeUriPathSegments": [
                "media"
            ],
            "resources": [
                {
                    "relativeUri": "/{mediaId}",
                    "relativeUriPathSegments": [
                        "{mediaId}"
                    ],
                    "type": "base",
                    "uriParameters": {
                        "mediaId": {
                            "type": "string",
                            "displayName": "mediaId",
                            "required": true
                        }
                    },
                    "methods": [
                        {
                            "method": "get",
                            "description": "Get information about a media object. The returned type key will allow you\nto differentiate between image and video media.\nNote: if you authenticate with an OAuth Token, you will receive the\nuser_has_liked key which quickly tells you whether the current user has liked\nthis media item.\n",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.Media"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/comments",
                            "relativeUriPathSegments": [
                                "comments"
                            ],
                            "type": {
                                "secured": {
                                    "scope": "comments"
                                }
                            },
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get a full list of comments on a media.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "types.MediaComment"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                },
                                {
                                    "method": "post",
                                    "description": "Create a comment on a media. Please email apidevelopers[at]instagram.com for access.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                                "text": {
                                                    "description": "Text to post as a comment on the media as specified in {mediaId}.",
                                                    "type": "string",
                                                    "required": "true"
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{commentId}",
                                    "relativeUriPathSegments": [
                                        "{commentId}"
                                    ],
                                    "type": {
                                        "secured": {
                                            "scope": "comments"
                                        }
                                    },
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "uriParameters": {
                                        "commentId": {
                                            "description": "Identifier of the comment",
                                            "type": "integer",
                                            "displayName": "commentId",
                                            "required": true
                                        }
                                    },
                                    "methods": [
                                        {
                                            "method": "delete",
                                            "description": "Remove a comment either on the authenticated user's media or authored by the authenticated user.\n",
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "responses": {
                                                "200": {
                                                    "description": "Comment removed.",
                                                    "body": {
                                                        "application/json": {
                                                            "type": "object",
                                                            "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                                            "schema": "undefined"
                                                        }
                                                    }
                                                },
                                                "503": {
                                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "relativeUri": "/likes",
                            "relativeUriPathSegments": [
                                "likes"
                            ],
                            "type": {
                                "secured": {
                                    "scope": "likes"
                                }
                            },
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get a list of users who have liked this media.\nRequired scope: likes.\n",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "types.MediaLikes"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                },
                                {
                                    "method": "post",
                                    "description": "Set a like on this media by the currently authenticated user.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "responses": {
                                        "200": {
                                            "description": "Successfully liked a media object\n",
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                },
                                {
                                    "method": "delete",
                                    "description": "Remove a like on this media by the currently authenticated user.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "204": {
                                            "description": "Like removed succesfully\n"
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "relativeUri": "/search",
                    "relativeUriPathSegments": [
                        "search"
                    ],
                    "type": "mediaSearch",
                    "methods": [
                        {
                            "method": "get",
                            "description": "Search for media in a given area. The default time span is set to 5 days.\nThe time span must not exceed 7 days. Defaults time stamps cover the\nlast 5 days.\n",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "max_timestamp": {
                                    "description": "Return media before this UNIX timestamp.",
                                    "type": "integer",
                                    "displayName": "max_timestamp"
                                },
                                "min_timestamp": {
                                    "description": "Return media after this UNIX timestamp.",
                                    "type": "integer",
                                    "displayName": "min_timestamp"
                                },
                                "lat": {
                                    "description": "Latitude of the center search coordinate. If used, lng is required.",
                                    "type": "number",
                                    "displayName": "lat"
                                },
                                "lng": {
                                    "description": "Longitude of the center search coordinate. If used, lat is required.",
                                    "type": "number",
                                    "displayName": "lng"
                                },
                                "distance": {
                                    "description": "Default is 1000m (distance=1000), max distance is 5000.",
                                    "type": "integer",
                                    "default": 1000,
                                    "displayName": "distance"
                                },
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitableByTime",
                                "limitableByGeoPoint",
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "object",
                                            "example": "{\n    \"data\": {\n        \"type\": \"image\",\n        \"users_in_photo\": [{\n            \"user\": {\n                \"username\": \"kevin\",\n                \"full_name\": \"Kevin S\",\n                \"id\": \"3\",\n                \"profile_picture\": \"...\"\n            },\n            \"position\": {\n                \"x\": 0.315,\n                \"y\": 0.9111\n            }\n        }],\n        \"filter\": \"Walden\",\n        \"tags\": [],\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"...\",\n            \"bio\": \"...\",\n            \"website\": \"...\",\n            \"id\": \"3\"\n        },\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"id\": \"3\",\n        \"location\": null\n    }\n}",
                                            "schema": "undefined"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ]
                },
                {
                    "relativeUri": "/popular",
                    "relativeUriPathSegments": [
                        "popular"
                    ],
                    "type": "mediaSearch",
                    "methods": [
                        {
                            "method": "get",
                            "description": "Get a list of what media is most popular at the moment.\n",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "object",
                                            "example": "{\n    \"data\": {\n        \"type\": \"image\",\n        \"users_in_photo\": [{\n            \"user\": {\n                \"username\": \"kevin\",\n                \"full_name\": \"Kevin S\",\n                \"id\": \"3\",\n                \"profile_picture\": \"...\"\n            },\n            \"position\": {\n                \"x\": 0.315,\n                \"y\": 0.9111\n            }\n        }],\n        \"filter\": \"Walden\",\n        \"tags\": [],\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"...\",\n            \"bio\": \"...\",\n            \"website\": \"...\",\n            \"id\": \"3\"\n        },\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"id\": \"3\",\n        \"location\": null\n    }\n}",
                                            "schema": "undefined"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "relativeUri": "/tags",
            "relativeUriPathSegments": [
                "tags"
            ],
            "resources": [
                {
                    "relativeUri": "/{tagName}",
                    "relativeUriPathSegments": [
                        "{tagName}"
                    ],
                    "type": "base",
                    "uriParameters": {
                        "tagName": {
                            "description": "Name of tag.",
                            "type": "string",
                            "displayName": "tagName",
                            "required": true
                        }
                    },
                    "methods": [
                        {
                            "method": "get",
                            "description": "Get information about a tag object.",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.Tag"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/media/recent",
                            "relativeUriPathSegments": [
                                "media",
                                "recent"
                            ],
                            "type": "base",
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get a list of recently tagged media. Note that this media is ordered by when the media was tagged\nwith this tag, rather than the order it was posted. Use the max_tag_id and min_tag_id parameters\nin the pagination response to paginate through these objects.\n",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "min_id": {
                                            "description": "Return media later than this min_id.",
                                            "type": "integer",
                                            "displayName": "min_id"
                                        },
                                        "max_id": {
                                            "description": "Return media earlier than this max_id.",
                                            "type": "integer",
                                            "displayName": "max_id"
                                        },
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitableById",
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "types.TagsRecentMedia"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "relativeUri": "/search",
                    "relativeUriPathSegments": [
                        "search"
                    ],
                    "type": "base",
                    "methods": [
                        {
                            "method": "get",
                            "description": "Search for tags by name. Results are ordered first as an exact match, then by popularity.\nShort tags will be treated as exact matches.\n",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "q": {
                                    "description": "A valid tag name without a leading #.\n",
                                    "type": "string",
                                    "example": "nofilter",
                                    "required": "true",
                                    "displayName": "q"
                                },
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.TagsSearch"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "relativeUri": "/users",
            "relativeUriPathSegments": [
                "users"
            ],
            "resources": [
                {
                    "relativeUri": "/{userId}",
                    "relativeUriPathSegments": [
                        "{userId}"
                    ],
                    "type": "base",
                    "uriParameters": {
                        "userId": {
                            "type": "string",
                            "displayName": "userId",
                            "required": true
                        }
                    },
                    "methods": [
                        {
                            "method": "get",
                            "description": "Get basic information about a user.",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.UserAccount"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/follows",
                            "relativeUriPathSegments": [
                                "follows"
                            ],
                            "type": "usersListing",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get the list of users this user follows.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_66_75sq.jpg\",\n        \"id\": \"66\",\n        \"last_name\": \"Dorsey\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_29648_75sq_1294520029.jpg\",\n        \"id\": \"29648\",\n        \"last_name\": \"Jack\"\n    },\n    {\n        \"username\": \"jacktiddy\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_13096_75sq_1286441317.jpg\",\n        \"id\": \"13096\",\n        \"last_name\": \"Tiddy\"\n    }]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "relativeUri": "/followed-by",
                            "relativeUriPathSegments": [
                                "followed-by"
                            ],
                            "type": "usersListing",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get the list of users this user is followed by.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_66_75sq.jpg\",\n        \"id\": \"66\",\n        \"last_name\": \"Dorsey\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_29648_75sq_1294520029.jpg\",\n        \"id\": \"29648\",\n        \"last_name\": \"Jack\"\n    },\n    {\n        \"username\": \"jacktiddy\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_13096_75sq_1286441317.jpg\",\n        \"id\": \"13096\",\n        \"last_name\": \"Tiddy\"\n    }]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "relativeUri": "/media/recent",
                            "relativeUriPathSegments": [
                                "media",
                                "recent"
                            ],
                            "type": "feedsListing",
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "See the authenticated user's feed. May return a mix of both image and\nvideo types.\n",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "min_id": {
                                            "description": "Return media later than this min_id.",
                                            "type": "integer",
                                            "displayName": "min_id"
                                        },
                                        "max_id": {
                                            "description": "Return media earlier than this max_id.",
                                            "type": "integer",
                                            "displayName": "max_id"
                                        },
                                        "max_timestamp": {
                                            "description": "Return media before this UNIX timestamp.",
                                            "type": "integer",
                                            "displayName": "max_timestamp"
                                        },
                                        "min_timestamp": {
                                            "description": "Return media after this UNIX timestamp.",
                                            "type": "integer",
                                            "displayName": "min_timestamp"
                                        },
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitableById",
                                        "limitableByTime",
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"location\": {\n            \"id\": \"833\",\n            \"latitude\": 37.77956816727314,\n            \"longitude\": -122.41387367248539,\n            \"name\": \"Civic Center BART\"\n        },\n        \"comments\": {\n            \"count\": 16,\n            \"data\": [  ]\n        },\n        \"caption\": null,\n        \"link\": \"http://instagr.am/p/BXsFz/\",\n        \"likes\": {\n            \"count\": 190,\n            \"data\": [{\n                \"username\": \"shayne\",\n                \"full_name\": \"Shayne Sweeney\",\n                \"id\": \"20\",\n                \"profile_picture\": \"...\"\n            }, {}]\n        },\n        \"created_time\": \"1296748524\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"id\": \"22987123\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        }\n    },\n    {\n        \"videos\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_102.mp4\",\n                \"width\": 480,\n                \"height\": 480\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_101.mp4\",\n                \"width\": 640,\n                \"height\": 640\n            },\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            },\n            {\n                \"created_time\": \"1279341004\",\n                \"text\": \"Chilako taco\",\n                \"from\": {\n                    \"username\": \"kevin\",\n                    \"full_name\": \"Kevin S\",\n                    \"id\": \"3\",\n                    \"profile_picture\": \"...\"\n                },\n                \"id\": \"3\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"video\",\n        \"users_in_photo\": null,\n        \"filter\": \"Vesper\",\n        \"tags\": [],\n        \"id\": \"363839373298\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        },\n        \"location\": null\n    }}]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "relativeUri": "/relationship",
                            "relativeUriPathSegments": [
                                "relationship"
                            ],
                            "type": {
                                "secured": {
                                    "scope": "comments"
                                }
                            },
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get information about a relationship to another user.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "types.Relationships"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                },
                                {
                                    "method": "post",
                                    "description": "Modify the relationship between the current user and the target user.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                                "action": {
                                                    "description": "One of follow/unfollow/block/unblock/approve/deny.",
                                                    "type": "string",
                                                    "enum": [
                                                        "follow",
                                                        "unfollow",
                                                        "block",
                                                        "unblock",
                                                        "approve",
                                                        "deny"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "types.Relationships",
                                                    "example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "relativeUri": "/search",
                    "relativeUriPathSegments": [
                        "search"
                    ],
                    "type": "usersListing",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "method": "get",
                            "description": "Search for a user by name.",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "q": {
                                    "description": "A query string.",
                                    "type": "string",
                                    "example": "some query",
                                    "required": "true",
                                    "displayName": "q"
                                },
                                "count": {
                                    "description": "Number of users to return.",
                                    "type": "integer",
                                    "example": "10",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "object",
                                            "example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_66_75sq.jpg\",\n        \"id\": \"66\",\n        \"last_name\": \"Dorsey\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_29648_75sq_1294520029.jpg\",\n        \"id\": \"29648\",\n        \"last_name\": \"Jack\"\n    },\n    {\n        \"username\": \"jacktiddy\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_13096_75sq_1286441317.jpg\",\n        \"id\": \"13096\",\n        \"last_name\": \"Tiddy\"\n    }]\n}",
                                            "schema": "undefined"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ]
                },
                {
                    "relativeUri": "/self",
                    "relativeUriPathSegments": [
                        "self"
                    ],
                    "type": {
                        "secured": {
                            "scope": "basic"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "method": "get",
                            "description": "Retrieve the authenticated user",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.UserAccount"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/feed",
                            "relativeUriPathSegments": [
                                "feed"
                            ],
                            "type": "feedsListing",
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "See the authenticated user's feed. May return a mix of both image and\nvideo types.\n",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "min_id": {
                                            "description": "Return media later than this min_id.",
                                            "type": "integer",
                                            "displayName": "min_id"
                                        },
                                        "max_id": {
                                            "description": "Return media earlier than this max_id.",
                                            "type": "integer",
                                            "displayName": "max_id"
                                        },
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitableById",
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"location\": {\n            \"id\": \"833\",\n            \"latitude\": 37.77956816727314,\n            \"longitude\": -122.41387367248539,\n            \"name\": \"Civic Center BART\"\n        },\n        \"comments\": {\n            \"count\": 16,\n            \"data\": [  ]\n        },\n        \"caption\": null,\n        \"link\": \"http://instagr.am/p/BXsFz/\",\n        \"likes\": {\n            \"count\": 190,\n            \"data\": [{\n                \"username\": \"shayne\",\n                \"full_name\": \"Shayne Sweeney\",\n                \"id\": \"20\",\n                \"profile_picture\": \"...\"\n            }, {}]\n        },\n        \"created_time\": \"1296748524\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"id\": \"22987123\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        }\n    },\n    {\n        \"videos\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_102.mp4\",\n                \"width\": 480,\n                \"height\": 480\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_101.mp4\",\n                \"width\": 640,\n                \"height\": 640\n            },\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            },\n            {\n                \"created_time\": \"1279341004\",\n                \"text\": \"Chilako taco\",\n                \"from\": {\n                    \"username\": \"kevin\",\n                    \"full_name\": \"Kevin S\",\n                    \"id\": \"3\",\n                    \"profile_picture\": \"...\"\n                },\n                \"id\": \"3\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"video\",\n        \"users_in_photo\": null,\n        \"filter\": \"Vesper\",\n        \"tags\": [],\n        \"id\": \"363839373298\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        },\n        \"location\": null\n    }}]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "relativeUri": "/requested-by",
                            "relativeUriPathSegments": [
                                "requested-by"
                            ],
                            "type": "usersListing",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "List the users who have requested this user's permission to follow.",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_66_75sq.jpg\",\n        \"id\": \"66\",\n        \"last_name\": \"Dorsey\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_29648_75sq_1294520029.jpg\",\n        \"id\": \"29648\",\n        \"last_name\": \"Jack\"\n    },\n    {\n        \"username\": \"jacktiddy\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_13096_75sq_1286441317.jpg\",\n        \"id\": \"13096\",\n        \"last_name\": \"Tiddy\"\n    }]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "relativeUri": "/media/liked",
                            "relativeUriPathSegments": [
                                "media",
                                "liked"
                            ],
                            "type": "feedsListing",
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "See the authenticated user's list of media they've liked. May return a mix\nof both image and video types.\nNote: This list is ordered by the order in which the user liked the media.\nPrivate media is returned as long as the authenticated user has permission\nto view that media. Liked media lists are only available for the currently\nauthenticated user.\n",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "max_like_id": {
                                            "description": "Return media liked before this id.",
                                            "type": "integer",
                                            "example": "100",
                                            "displayName": "max_like_id"
                                        },
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"location\": {\n            \"id\": \"833\",\n            \"latitude\": 37.77956816727314,\n            \"longitude\": -122.41387367248539,\n            \"name\": \"Civic Center BART\"\n        },\n        \"comments\": {\n            \"count\": 16,\n            \"data\": [  ]\n        },\n        \"caption\": null,\n        \"link\": \"http://instagr.am/p/BXsFz/\",\n        \"likes\": {\n            \"count\": 190,\n            \"data\": [{\n                \"username\": \"shayne\",\n                \"full_name\": \"Shayne Sweeney\",\n                \"id\": \"20\",\n                \"profile_picture\": \"...\"\n            }, {}]\n        },\n        \"created_time\": \"1296748524\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"id\": \"22987123\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        }\n    },\n    {\n        \"videos\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_102.mp4\",\n                \"width\": 480,\n                \"height\": 480\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_101.mp4\",\n                \"width\": 640,\n                \"height\": 640\n            },\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            },\n            {\n                \"created_time\": \"1279341004\",\n                \"text\": \"Chilako taco\",\n                \"from\": {\n                    \"username\": \"kevin\",\n                    \"full_name\": \"Kevin S\",\n                    \"id\": \"3\",\n                    \"profile_picture\": \"...\"\n                },\n                \"id\": \"3\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"video\",\n        \"users_in_photo\": null,\n        \"filter\": \"Vesper\",\n        \"tags\": [],\n        \"id\": \"363839373298\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        },\n        \"location\": null\n    }}]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "relativeUri": "/locations",
            "relativeUriPathSegments": [
                "locations"
            ],
            "resources": [
                {
                    "relativeUri": "/{locId}",
                    "relativeUriPathSegments": [
                        "{locId}"
                    ],
                    "type": "base",
                    "uriParameters": {
                        "locId": {
                            "type": "integer",
                            "displayName": "locId",
                            "required": true
                        }
                    },
                    "methods": [
                        {
                            "method": "get",
                            "description": "Get information about a location.",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.Location"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/media/recent",
                            "relativeUriPathSegments": [
                                "media",
                                "recent"
                            ],
                            "type": "feedsListing",
                            "methods": [
                                {
                                    "method": "get",
                                    "description": "Get a list of recent media objects from a given location. May return a\nmix of both image and video types.\n",
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "clientId"
                                    ],
                                    "queryParameters": {
                                        "min_id": {
                                            "description": "Return media later than this min_id.",
                                            "type": "integer",
                                            "displayName": "min_id"
                                        },
                                        "max_id": {
                                            "description": "Return media earlier than this max_id.",
                                            "type": "integer",
                                            "displayName": "max_id"
                                        },
                                        "max_timestamp": {
                                            "description": "Return media before this UNIX timestamp.",
                                            "type": "integer",
                                            "displayName": "max_timestamp"
                                        },
                                        "min_timestamp": {
                                            "description": "Return media after this UNIX timestamp.",
                                            "type": "integer",
                                            "displayName": "min_timestamp"
                                        },
                                        "count": {
                                            "description": "Number of items you would like to receive.",
                                            "type": "integer",
                                            "example": "1",
                                            "displayName": "count"
                                        },
                                        "callback": {
                                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                                            "type": "string",
                                            "example": "callbackFunction",
                                            "displayName": "callback"
                                        }
                                    },
                                    "is": [
                                        "limitableById",
                                        "limitableByTime",
                                        "limitable",
                                        "acceptCallback"
                                    ],
                                    "responses": {
                                        "200": {
                                            "body": {
                                                "application/json": {
                                                    "type": "object",
                                                    "example": "{\n    \"data\": [{\n        \"location\": {\n            \"id\": \"833\",\n            \"latitude\": 37.77956816727314,\n            \"longitude\": -122.41387367248539,\n            \"name\": \"Civic Center BART\"\n        },\n        \"comments\": {\n            \"count\": 16,\n            \"data\": [  ]\n        },\n        \"caption\": null,\n        \"link\": \"http://instagr.am/p/BXsFz/\",\n        \"likes\": {\n            \"count\": 190,\n            \"data\": [{\n                \"username\": \"shayne\",\n                \"full_name\": \"Shayne Sweeney\",\n                \"id\": \"20\",\n                \"profile_picture\": \"...\"\n            }, {}]\n        },\n        \"created_time\": \"1296748524\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"id\": \"22987123\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        }\n    },\n    {\n        \"videos\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_102.mp4\",\n                \"width\": 480,\n                \"height\": 480\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_101.mp4\",\n                \"width\": 640,\n                \"height\": 640\n            },\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            },\n            {\n                \"created_time\": \"1279341004\",\n                \"text\": \"Chilako taco\",\n                \"from\": {\n                    \"username\": \"kevin\",\n                    \"full_name\": \"Kevin S\",\n                    \"id\": \"3\",\n                    \"profile_picture\": \"...\"\n                },\n                \"id\": \"3\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"video\",\n        \"users_in_photo\": null,\n        \"filter\": \"Vesper\",\n        \"tags\": [],\n        \"id\": \"363839373298\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        },\n        \"location\": null\n    }}]\n}",
                                                    "schema": "undefined"
                                                }
                                            }
                                        },
                                        "503": {
                                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "relativeUri": "/search",
                    "relativeUriPathSegments": [
                        "search"
                    ],
                    "type": "base",
                    "methods": [
                        {
                            "method": "get",
                            "description": "Search for a location by geographic coordinate.",
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "clientId"
                            ],
                            "queryParameters": {
                                "foursquare_v2_id": {
                                    "description": "Returns a location mapped off of a foursquare v2 api location id. If\nused, you are not required to use lat and lng.\n",
                                    "type": "string",
                                    "displayName": "foursquare_v2_id"
                                },
                                "foursquare_id": {
                                    "description": "Returns a location mapped off of a foursquare v1 api location id. If used,\nyou are not required to use lat and lng. Note that this method is deprecated;\nyou should use the new foursquare IDs with V2 of their API.\n",
                                    "type": "string",
                                    "displayName": "foursquare_id"
                                },
                                "lat": {
                                    "description": "Latitude of the center search coordinate. If used, lng is required.",
                                    "type": "number",
                                    "displayName": "lat"
                                },
                                "lng": {
                                    "description": "Longitude of the center search coordinate. If used, lat is required.",
                                    "type": "number",
                                    "displayName": "lng"
                                },
                                "distance": {
                                    "description": "Default is 1000m (distance=1000), max distance is 5000.",
                                    "type": "integer",
                                    "default": 1000,
                                    "displayName": "distance"
                                },
                                "count": {
                                    "description": "Number of items you would like to receive.",
                                    "type": "integer",
                                    "example": "1",
                                    "displayName": "count"
                                },
                                "callback": {
                                    "description": "Callback function name. All output will be wrapper under this function name.\n",
                                    "type": "string",
                                    "example": "callbackFunction",
                                    "displayName": "callback"
                                }
                            },
                            "is": [
                                "limitableByGeoPoint",
                                "limitable",
                                "acceptCallback"
                            ],
                            "responses": {
                                "200": {
                                    "body": {
                                        "application/json": {
                                            "type": "types.Locations"
                                        }
                                    }
                                },
                                "503": {
                                    "description": "Server Unavailable. Check Your Rate Limits.\n"
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "relativeUri": "/geographies/{geoId}/media/recent",
            "relativeUriPathSegments": [
                "geographies",
                "{geoId}",
                "media",
                "recent"
            ],
            "type": "base",
            "uriParameters": {
                "geoId": {
                    "type": "string",
                    "displayName": "geoId",
                    "required": true
                }
            },
            "methods": [
                {
                    "method": "get",
                    "description": "Get recent media from a geography subscription that you created.\nNote: You can only access Geographies that were explicitly created by your\nOAuth client. Check the Geography Subscriptions section of the real-time\nupdates page. When you create a subscription to some geography that you\ndefine, you will be returned a unique geo-id that can be used in this\nquery. To backfill photos from the location covered by this geography,\nuse the media search endpoint.\n",
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "clientId"
                    ],
                    "queryParameters": {
                        "min_id": {
                            "description": "Return media before this min_id.",
                            "type": "integer",
                            "example": "0",
                            "displayName": "min_id"
                        },
                        "count": {
                            "description": "Number of items you would like to receive.",
                            "type": "integer",
                            "example": "1",
                            "displayName": "count"
                        },
                        "callback": {
                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                            "type": "string",
                            "example": "callbackFunction",
                            "displayName": "callback"
                        }
                    },
                    "is": [
                        "limitable",
                        "acceptCallback"
                    ],
                    "responses": {
                        "200": null,
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                }
            ]
        },
        {
            "relativeUri": "/subscriptions",
            "relativeUriPathSegments": [
                "subscriptions"
            ],
            "type": "base",
            "methods": [
                {
                    "method": "get",
                    "description": "List subscriptions",
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "client_id": {
                            "description": "Application's client id",
                            "type": "string",
                            "required": "true",
                            "displayName": "client_id"
                        },
                        "client_secret": {
                            "description": "Application's client secret",
                            "type": "string",
                            "required": "true",
                            "displayName": "client_secret"
                        },
                        "count": {
                            "description": "Number of items you would like to receive.",
                            "type": "integer",
                            "example": "1",
                            "displayName": "count"
                        },
                        "callback": {
                            "description": "Callback function name. All output will be wrapper under this function name.\n",
                            "type": "string",
                            "example": "callbackFunction",
                            "displayName": "callback"
                        }
                    },
                    "is": [
                        "limitable",
                        "acceptCallback"
                    ],
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "types.SubscriptionsGet"
                                }
                            }
                        },
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                },
                {
                    "method": "post",
                    "description": "Create a subscription",
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "clientId"
                    ],
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "type": "object",
                            "properties": {
                                "client_id": {
                                    "description": "Application's client id",
                                    "type": "string",
                                    "required": "true"
                                },
                                "client_secret": {
                                    "description": "Application's client secret",
                                    "type": "string",
                                    "required": "true"
                                },
                                "object": {
                                    "description": "The object you'd like to subscribe to.",
                                    "type": "string",
                                    "enum": [
                                        "location",
                                        "user",
                                        "geography",
                                        "tag"
                                    ]
                                },
                                "object_id": {
                                    "description": "Used for user, location and tag subscriptions only. Required. In case of user and location represents 'id' of the desired object. In case of tag represents 'name' of the desired tag.",
                                    "type": "string"
                                },
                                "aspect": {
                                    "description": "The aspect of the object you'd like to subscribe to. Note that we only support \"media\" at this time, but we might support other types of subscriptions in the future.\n",
                                    "type": "string"
                                },
                                "callback_url": {
                                    "description": "When we have new updates to send your server, we do a simple POST with a payload containing updates to a URL on your server. This callback URL must support GET and POST methods.\n\nWhen you add a subscription, we will send a GET request to your callback URL to verify the existence of the URL and that want to create the subscription. When we have new data, we'll POST this data to your callback URL. We'll explain more about what this URL needs to do later on this page.\n",
                                    "type": "string",
                                    "required": "true"
                                },
                                "lat": {
                                    "description": "Geography area's center latitude. Used for geography subscription only. Required.",
                                    "type": "number"
                                },
                                "lng": {
                                    "description": "Geography area's center longitude. Used for geography subscription only. Required.",
                                    "type": "number"
                                },
                                "radius": {
                                    "description": "Geography area's radius.Used for geography subscription only. Required.",
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "types.SubscriptionPost"
                                }
                            }
                        },
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                },
                {
                    "method": "delete",
                    "description": "Selete a subscription",
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "client_id": {
                            "description": "Application's client id",
                            "type": "string",
                            "required": "true",
                            "displayName": "client_id"
                        },
                        "client_secret": {
                            "description": "Application's client secret",
                            "type": "string",
                            "required": "true",
                            "displayName": "client_secret"
                        },
                        "id": {
                            "description": "Id of subscription to be removed.",
                            "type": "string",
                            "displayName": "id"
                        },
                        "object": {
                            "description": "If you'd like to remove all subscriptions of a certain object type, you may include the object type. Also you can clear all your current subscriptions by setting 'object' to 'all'.",
                            "type": "string",
                            "enum": [
                                "geography",
                                "location",
                                "tag",
                                "user",
                                "all"
                            ],
                            "displayName": "object"
                        }
                    },
                    "responses": {
                        "200": {
                            "body": {
                                "application/json": {
                                    "type": "types.SubscriptionsDelete"
                                }
                            }
                        },
                        "503": {
                            "description": "Server Unavailable. Check Your Rate Limits.\n"
                        }
                    }
                }
            ]
        }
    ],
    "baseUriParameters": {
        "version": {
            "type": "string",
            "displayName": "version",
            "required": true,
            "enum": [
                "v1"
            ]
        }
    }
}